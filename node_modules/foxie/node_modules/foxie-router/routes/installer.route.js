var api = require("foxie-api"),
		data = require("foxie-data"),
		express = require("express"),
		mount = require("../controller/server.js"),
		mongoose = require("foxie-mongoose"),
		async = require("async"),
		promise = require("bluebird"),
		stylus = require("stylus")
		api = {
			loadModel:api.connection.loadModel,
			routeDynamic:api.router.dynamic.route.create,
			machineName:api.misc.machineName
		}

//static data
var settings = {
	purpose:"installer",
	varbose:true,
	get selectTheme(){
		return api.machineName(data.themes_set[this.purpose])//must use machine name more as convention!!
	}
}

//dynamic data
var schema = {
	themeSet:promise.promisifyAll( api.loadModel("foxie-themes","mount.model.js") ),
	themeMeta:promise.promisifyAll( api.loadModel("foxie-themes","themes.model.js") ),
	themeBoxes:promise.promisifyAll( api.loadModel("foxie-boxes","boxes.model.js") ),
}

//query some theme things
var query = {
	themeMount:schema.themeSet.findOneAsync({machineName:settings.selectTheme}),
	themeMeta:schema.themeMeta.findOneAsync({machineName:settings.selectTheme}),
	themeBoxes:schema.themeBoxes.findAsync({theme:settings.selectTheme})
}

loadMount()

function loadMount(){
	query.themeMount
	.then(function(res){
	return res.machineName;
	})
	.catch(function(err){
		if(err) console.log(err)
	})
	.done(loadThemeMeta)
}

function loadThemeMeta(){
	query.themeMeta
	.then(function(res){
		return res;
	})
	.catch(function(err){
		if(err) console.log(err)
	})
	.done(loadThemeBoxes)
}

function loadThemeBoxes(){
	query.themeBoxes
	.then(function(res){

		//modularise
		function $class(data){
			this.render = function(machineName){
				for(box in data){
					if(data[box].machineName == machineName){
					 return data[box].compiled;
					}
				}
			}
		}
		var make = new $class(res),
			render = make.render;

		return render;
	})
	.catch(function(err){
		if(err) console.log(err)
	})
	.done(renderRoute)
}

//needs to be async with callback for nice non blocking development
function renderRoute(renderFn){

mount.app.get("/install",route)

	function route(req,res){
		var jade = require("jade")

		var body = jade.compileFile(data.themes[settings.selectTheme].page)
		var head = jade.compileFile(data.themes[settings.selectTheme].html)

		var markup = head({
			site:data.app_meta,
			foxie:{
				libraries:data["_libraries"][settings.selectTheme].join("\n"),
				styles:data.themes[settings.selectTheme+"--assets"].settings.styles.join("\n")
			}
		})+
		body({
			site:data.app_meta,
			render:renderFn,
			foxie:{
				scripts:data.themes[settings.selectTheme+"--assets"].settings.scripts.join("\n")
			},
			admin:{
				adminMenu:data.view_common["admin_menu"],//cleen up and pipe the admin menu to templates
				install:data.install_stat.core
			}
		})

		res.render("index",{
			compile:markup
		})
	}

}

